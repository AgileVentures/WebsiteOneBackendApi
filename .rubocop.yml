
AllCops:
  DisabledByDefault: true
  DisplayCopNames: true
  DisplayStyleGuide: true
  TargetRubyVersion: 2.6
  Exclude:
    - 'spec/spec_helper.rb'
    - 'db/**/*'
    - 'config/**/*'
    - 'script/**/*'
    - 'bin/**/*'

require:
  - rubocop-rails
  - rubocop-performance

Rails:
 Enabled: true

 
# Layout

Layout/TrailingWhitespace:
  Description: This cop looks for trailing whitespace in the source code.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-trailing-whitespace'
  Enabled: true

Layout/SpaceAroundOperators:
  Description: Checks that operators have space around them, except for ** which should or shouldn't have surrounding space depending on configuration.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#spaces-operators'
  Enabled: true

Layout/SpaceAfterComma:
  Description: 'Checks for comma (,) not followed by some kind of space.'
  Enabled: true

Layout/SpaceAfterColon:
  Description: 'Checks for colon (:) not followed by some kind of space. N.B. this cop does not handle spaces after a ternary operator,
                which are instead handled by Layout/SpaceAroundOperators.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#spaces-operators'
  Enabled: true


Layout/IndentationWidth:
  Description: 'Use 2 spaces for indentation.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#spaces-indentation'
  Enabled: true

Layout/IndentationConsistency:
  Description: 'Keep indentation straight.'
  Enabled: true

Layout/LineLength:
  Max: 120
  # To make it possible to copy or click on URIs in the code, we allow lines
  # contaning a URI to be longer than Max.
  AllowURI: true
  URISchemes:
    - http
    - https
  Description: 'Limit lines to 120 characters.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#80-character-limits'
  Enabled: true
Layout/ConditionPosition:
  Description: >-
                 Checks for condition placed in a confusing position relative to
                 the keyword.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#same-line-condition'
  Enabled: true

Layout/MultilineBlockLayout:
  Description: 'Ensures newlines after multiline block do statements.'
  Enabled: true

Layout/MultilineOperationIndentation:
  Description: >-
                 Checks indentation of binary operations that span more than
                 one line.
  Enabled: true

Layout/BlockAlignment:
  Description: 'Align block ends correctly.'
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/BlockAlignment'
  Enabled: true
  
Layout/AccessModifierIndentation:
  Description: Check indentation of private/protected visibility modifiers.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#indent-public-private-protected'
  Enabled: true

Layout/BlockEndNewline:
  Description: 'Put end statement of multiline block on its own line.'
  Enabled: true

Layout/ClosingParenthesisIndentation:
  Description: 'Checks the indentation of hanging closing parentheses.'
  Enabled: true

Layout/SpaceAroundEqualsInParameterDefault:
  EnforcedStyle: no_space

Layout/CaseIndentation:
  Description: 'Indentation of when in a case/when/[else/]end.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#indent-when-to-case'
  Enabled: true

Layout/DotPosition:
  Description: 'Checks the position of the dot in multi-line method calls.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#consistent-multi-line-chains'
  EnforcedStyle: leading
  Enabled: true

Layout/EndAlignment:
  # The value `keyword` means that `end` should be aligned with the matching
  # keyword (if, while, etc.).
  # The value `variable` means that in assignments, `end` should be aligned
  # with the start of the variable on the left hand side of `=`. In all other
  # situations, `end` should still be aligned with the keyword.
  EnforcedStyleAlignWith: keyword
  AutoCorrect: false
  Enabled: true

Layout/DefEndAlignment:
  # The value `def` means that `end` should be aligned with the def keyword.
  # The value `start_of_line` means that `end` should be aligned with method
  # calls like `private`, `public`, etc, if present in front of the `def`
  # keyword on the same line.
  EnforcedStyleAlignWith: start_of_line
  AutoCorrect: false
  Enabled: true

# Metric

Metrics/ClassLength:
  CountComments: false  # count full line comments?
  Max: 100
  Description: 'Avoid classes longer than 100 lines of code.'
  Enabled: true

Metrics/ModuleLength:
  CountComments: false  # count full line comments?
  Max: 100
  Description: 'Avoid modules longer than 100 lines of code.'
  Enabled: true

Metrics/CyclomaticComplexity:
  Max: 6
  Description: >-
                 A complexity metric that is strongly correlated to the number
                 of test cases needed to validate a method.
  Enabled: true

Metrics/BlockNesting:
  Max: 3
  Description: 'Avoid excessive block nesting'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#three-is-the-number-thou-shalt-count'
  Enabled: true
Metrics/AbcSize:
  # The ABC size is a calculated magnitude, so this number can be a Fixnum or
  # a Float.
  Max: 25
  Description: >-
                 A calculated magnitude based on number of assignments,
                 branches, and conditions.
  Reference: 'http://c2.com/cgi/wiki?AbcMetric'
  Enabled: true

Metrics/MethodLength:
  CountComments: false
  Max: 7
  Description: 'Avoid methods longer than 10 lines of code.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#short-methods'
  Enabled: true

Metrics/ParameterLists:
  Max: 5
  CountKeywordArgs: true
  Description: 'Avoid parameter lists longer than three or four parameters.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#too-many-params'
  Enabled: true

Metrics/PerceivedComplexity:
  Max: 7
  Description: >-
                 A complexity metric geared towards measuring complexity for a
                 human reader.
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Metrics/PerceivedComplexity'
  Enabled: true

# Linting

Lint/AssignmentInCondition:
  Description: "Don't use assignment in conditions."
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#safe-assignment-in-condition'
  Enabled: true

Lint/AmbiguousRegexpLiteral:
  Description: >-
                 Checks for ambiguous regexp literals in the first argument of
                 a method invocation without parenthesis.
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/AmbiguousRegexpLiteral'
  Enabled: true

Lint/AmbiguousOperator:
  Description: >-
                 Checks for ambiguous operators in the first argument of a
                 method invocation without parentheses.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#parens-as-args'
  Enabled: true

Lint/CircularArgumentReference:
  Description: "Don't refer to the keyword argument in the default value."
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/CircularArgumentReference'
  Enabled: true

Lint/Debugger:
  Description: 'Check for debugger calls.'
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/Debugger'
  Enabled: true

Lint/DeprecatedClassMethods:
  Description: 'Check for deprecated class method calls.'
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/DeprecatedClassMethods'
  Enabled: true

Lint/DuplicateMethods:
  Description: 'Check for duplicate methods calls.'
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/DuplicateMethods'
  Enabled: true

Lint/EachWithObjectArgument:
  Description: 'Check for immutable argument given to each_with_object.'
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/EachWithObjectArgument'
  Enabled: true

Lint/ElseLayout:
  Description: 'Check for odd code arrangement in an else block.'
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/ElseLayout'
  Enabled: true

Lint/EmptyEnsure:
  Description: 'Checks for empty ensure block.'
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/EmptyEnsure'
  Enabled: true

Lint/EmptyInterpolation:
  Description: 'Checks for empty string interpolation.'
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/EmptyInterpolation'
  Enabled: true

Lint/RescueException:
  Description: 'Avoid rescuing the Exception class.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-blind-rescues'
  Enabled: true

Lint/RedundantStringCoercion:
  Description: 'Checks for Object#to_s usage in string interpolation.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-to-s'
  Enabled: true

Lint/UnusedBlockArgument:
  Description: 'Checks for unused block arguments.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#underscore-unused-vars'
  Enabled: true

Lint/UnusedMethodArgument:
  Description: 'Checks for unused method arguments.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#underscore-unused-vars'
  Enabled: true

Lint/UnreachableCode:
  Description: 'Unreachable code.'
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UnreachableCode'
  Enabled: true

Lint/UselessAccessModifier:
  Description: 'Checks for useless access modifiers.'
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UselessAccessModifier'
  Enabled: true

Lint/UselessAssignment:
  Description: 'Checks for useless assignments.'
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UselessAssignment'
  Enabled: true

Lint/LiteralAsCondition:
  Description: 'Checks for useless access modifiers.'
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UselessAssignment'
  Enabled: true

Lint/FlipFlop:
  Description: 'Checks for flip flops'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-flip-flops'
  Enabled: true



# Naming

Naming/AccessorMethodName:
  Description: 'This cop makes sure that accessor methods are named properly'
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/AccessorMethodName'
  Enabled: true

Naming/VariableName:
  Description: 'This cop makes sure that accessor methods are named properly'
  StyleGuide: 'https://rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/VariableNumber'
  Enabled: true

Naming/FileName:
  Description: 'Use snake_case for source file names.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#snake-case-files'
  Enabled: true

Naming/MethodName:
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#parens-no-spaces'
  Enabled: true

Naming/AsciiIdentifiers:
  Description: 'Use only ascii symbols in identifiers.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#english-identifiers'
  Enabled: true

Naming/ClassAndModuleCamelCase:
  Description: 'Use CamelCase for classes and modules.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#camelcase-classes'
  Enabled: true


Naming/ConstantName:
  Description: 'Constants should use SCREAMING_SNAKE_CASE.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#screaming-snake-case'
  Enabled: true

Naming/BinaryOperatorParameterName:
  Description: 'When defining binary operators, name the argument other.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#other-arg'
  Enabled: true

Naming/PredicateName:
  Description: 'Check the names of predicate methods.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#bool-methods-qmark'
  Enabled: true

# Styling

Style/WhileUntilModifier:
  Description: >-
                 Favor modifier while/until usage when you have a
                 single-line body.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#while-as-a-modifier'
  Enabled: true


Style/WordArray:
  Description: 'Use %w or %W for arrays of words.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#percent-w'

Style/DoubleNegation:
  Description: 'Checks for uses of double negation (!!).'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-bang-bang'
  Enabled: true

Style/EachWithObject:
  Description: 'Prefer `each_with_object` over `inject` or `reduce`.'
  Enabled: true

Style/EmptyElse:
  Description: 'Avoid empty else-clauses.'
  Enabled: true

Style/EmptyLiteral:
  Description: 'Prefer literals to Array.new/Hash.new/String.new.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#literal-array-hash'
  Enabled: true

Style/EndBlock:
  Description: 'Avoid the use of END blocks.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-END-blocks'
  Enabled: true


Style/EvenOdd:
  Description: 'Favor the use of Fixnum#even? && Fixnum#odd?'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#predicate-methods'
  Enabled: true

Style/For:
  Description: 'Checks use of for or each in multiline loops.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-for-loops'
  Enabled: true

Style/FormatString:
  Description: 'Enforce the use of Kernel#sprintf, Kernel#format or String#%.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#sprintf'
  Enabled: true

Style/GlobalVars:
  Description: 'Do not introduce global variables.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#instance-vars'
  Reference: 'http://www.zenspider.com/Languages/Ruby/QuickRef.html'
  Enabled: true

Style/GuardClause:
  Description: 'Check for conditionals that can be replaced with guard clauses'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-nested-conditionals'
  Enabled: true

Style/HashSyntax:
  Description: >-
                 Prefer Ruby 1.9 hash syntax { a: 1, b: 2 } over 1.8 syntax
                 { :a => 1, :b => 2 }.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#hash-literals'
  Enabled: true

Style/IfUnlessModifier:
  Description: >-
                 Favor modifier if/unless usage when you have a
                 single-line body.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#if-as-a-modifier'
  Enabled: true

Style/IfWithSemicolon:
  Description: 'Do not use if x; .... Use the ternary operator instead.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-semicolon-ifs'
  Enabled: true


Style/InfiniteLoop:
  Description: 'Use Kernel#loop for infinite loops.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#infinite-loop'
  Enabled: true

Style/Lambda:
  Description: 'Use the new lambda literal syntax for single-line blocks.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#lambda-multi-line'
  Enabled: true

Style/LambdaCall:
  Description: 'Use lambda.call(...) instead of lambda.(...).'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#proc-call'
  Enabled: true

Style/LineEndConcatenation:
  Description: >-
                 Use \ instead of + or << to concatenate two string literals at
                 line end.
  Enabled: true

Style/MethodCallWithoutArgsParentheses:
  Description: 'Do not use parentheses for method calls with no arguments.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-args-no-parens'
  Enabled: true

Style/ModuleFunction:
  Description: 'Checks for usage of `extend self` in modules.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#module-function'
  Enabled: true

Style/MultilineBlockChain:
  Description: 'Avoid multi-line chains of blocks.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#single-line-blocks'
  Enabled: true

Style/MultilineIfThen:
  Description: 'Do not use then for multi-line if/unless.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-then'
  Enabled: true


Style/MultilineTernaryOperator:
  Description: >-
                 Avoid multi-line ?: (the ternary operator);
                 use if/unless instead.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-multiline-ternary'
  Enabled: true

Style/NegatedIf:
  Description: >-
                 Favor unless over if for negative conditions
                 (or control flow or).
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#unless-for-negatives'
  Enabled: true

Style/NegatedWhile:
  Description: 'Favor until over while for negative conditions.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#until-for-negatives'
  Enabled: true

Style/NestedTernaryOperator:
  Description: 'Use one expression per branch in a ternary operator.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-nested-ternary'
  Enabled: true

Style/Next:
  Description: 'Use `next` to skip iteration instead of a condition at the end.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-nested-conditionals'
  Enabled: true

Style/NilComparison:
  Description: 'Prefer x.nil? to x == nil.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#predicate-methods'
  Enabled: true

Style/NonNilCheck:
  Description: 'Checks for redundant nil checks.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-non-nil-checks'
  Enabled: true

Style/Not:
  Description: 'Use ! instead of not.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#bang-not-not'
  Enabled: true

Style/NumericLiterals:
  Description: >-
                 Add underscores to large numeric literals to improve their
                 readability.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#underscores-in-numerics'
  Enabled: true

Style/Alias:
  Description: 'Use alias_method instead of alias.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#alias-method'
  Enabled: true
Style/ArrayJoin:
  Description: 'Use Array#join instead of Array#*.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#array-join'
  Enabled: true

Style/AsciiComments:
  Description: 'Use only ascii symbols in comments.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#english-comments'
  Enabled: true
Style/Attr:
  Description: 'Checks for uses of Module#attr.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#attr'
  Enabled: true
Style/BeginBlock:
  Description: 'Avoid the use of BEGIN blocks.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-BEGIN-blocks'
  Enabled: true

Style/BarePercentLiterals:
  Description: 'Checks if usage of %() or %Q() matches configuration.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#percent-q-shorthand'
  Enabled: true

Style/BlockComments:
  Description: 'Do not use block comments.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-block-comments'
  Enabled: true
Style/BlockDelimiters:
  Description: >-
                Avoid using {...} for multi-line blocks (multiline chaining is
                always ugly).
                Prefer {...} over do...end for single-line blocks.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#single-line-blocks'
  Enabled: true

Style/CaseEquality:
  Description: 'Avoid explicit use of the case equality operator(===).'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-case-equality'
  Enabled: true

Style/CharacterLiteral:
  Description: 'Checks for uses of character literals.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-character-literals'
  Enabled: true

Style/ClassAndModuleChildren:
  Description: 'Checks style of children classes and modules.'
  Enabled: true

Style/ClassCheck:
  Description: 'Enforces consistent use of `Object#is_a?` or `Object#kind_of?`.'
  Enabled: true

Style/ClassMethods:
  Description: 'Use self when defining module/class methods.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#def-self-class-methods'
  Enabled: true

Style/ClassVars:
  Description: 'Avoid the use of class variables.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-class-vars'
  Enabled: true

Style/ColonMethodCall:
  Description: 'Do not use :: for method call.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#double-colons'
  Enabled: true

Style/CommandLiteral:
  Description: 'Use `` or %x around command literals.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#percent-x'
  Enabled: true
  
Style/DefWithParentheses:
  Description: 'Use def with parentheses when there are arguments.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#method-parens'
  Enabled: true

Style/PreferredHashMethods:
  Description: 'Checks for use of deprecated Hash methods.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#hash-key'
  Enabled: true
Style/OptionalArguments:
  Description: >-
                 Checks for optional arguments that do not appear at the end
                 of the argument list
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#optional-arguments'
  Enabled: true

Style/ParallelAssignment:
  Description: >-
                  Check for simple usages of parallel assignment.
                  It will only warn when the number of variables
                  matches on both sides of the assignment.
                  This also provides performance benefits
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#parallel-assignment'
  Enabled: true

Style/ParenthesesAroundCondition:
  Description: >-
                 Don't use parentheses around the condition of an
                 if/unless/while.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-parens-if'
  Enabled: true

Style/PercentLiteralDelimiters:
  Description: 'Use `%`-literal delimiters consistently'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#percent-literal-braces'
  Enabled: true

Style/PercentQLiterals:
  Description: 'Checks if uses of %Q/%q match the configured preference.'
  Enabled: true

Style/PerlBackrefs:
  Description: 'Avoid Perl-style regex back references.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-perl-regexp-last-matchers'
  Enabled: true


Style/Proc:
  Description: 'Use proc instead of Proc.new.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#proc'
  Enabled: true

Style/RaiseArgs:
  Description: 'Checks the arguments passed to raise/fail.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#exception-class-messages'
  Enabled: true

Style/RedundantBegin:
  Description: "Don't use begin blocks when they are not needed."
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#begin-implicit'
  Enabled: true

Style/RedundantException:
  Description: "Checks for an obsolete RuntimeException argument in raise/fail."
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-explicit-runtimeerror'
  Enabled: true

Style/RedundantReturn:
  Description: "Don't use return where it's not required."
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-explicit-return'
  Enabled: true

Style/RegexpLiteral:
  Description: 'Use / or %r around regular expressions.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#percent-r'
  Enabled: true

Layout/RescueEnsureAlignment:
  Description: 'Align rescues and ensures correctly.'
  Enabled: true

Style/RescueModifier:
  Description: 'Avoid using rescue in its modifier form.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-rescue-modifiers'
  Enabled: true

Style/SelfAssignment:
  Description: >-
                 Checks for places where self-assignment shorthand should have
                 been used.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#self-assignment'
  Enabled: true

Style/SignalException:
  Description: 'Checks for proper usage of fail and raise.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#fail-method'
  Enabled: true

Style/SpecialGlobalVars:
  Description: 'Avoid Perl-style global variables.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-cryptic-perlisms'
  Enabled: true

Style/StringLiterals:
  Description: 'Checks if uses of quotes match the configured preference.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#consistent-string-literals'
  EnforcedStyle: single_quotes
  Enabled: true

Style/StringLiteralsInInterpolation:
  Description: >-
                 Checks if uses of quotes inside expressions in interpolated
                 strings match the configured preference.
  EnforcedStyle: single_quotes
  Enabled: true

Style/StructInheritance:
  Description: 'Checks for inheritance from Struct.new.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-extend-struct-new'
  Enabled: true

Style/SymbolLiteral:
  Description: 'Use plain symbols instead of string symbols when possible.'
  Enabled: true

Style/SymbolProc:
  Description: 'Use symbols as procs instead of blocks when possible.'
  Enabled: true

Style/TrivialAccessors:
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#attr_family'
  Enabled: true

Style/UnlessElse:
  Description: >-
                 Do not use unless with else. Rewrite these with the positive
                 case first.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-else-with-unless'
  Enabled: true

Style/RedundantCapitalW:
  Description: 'Checks for %W when interpolation is not needed.'
  Enabled: true

Style/RedundantPercentQ:
  Description: 'Checks for %q/%Q when single quotes or double quotes would do.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#percent-q'
  Enabled: true

Style/TrailingUnderscoreVariable:
  Description: >-
                 Checks for the usage of unneeded trailing underscores at the
                 end of parallel variable assignment.
  Enabled: true

Style/VariableInterpolation:
  Description: >-
                 Don't interpolate global, instance and class variables
                 directly in strings.
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#curlies-interpolate'
  Enabled: true

Style/WhenThen:
  Description: 'Use when x then ... for one-line cases.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#one-line-cases'
  Enabled: true

Style/WhileUntilDo:
  Description: 'Checks for redundant do after while or until.'
  StyleGuide: 'https://github.com/rubocop-hq/ruby-style-guide#no-multiline-while-do'
  Enabled: true















